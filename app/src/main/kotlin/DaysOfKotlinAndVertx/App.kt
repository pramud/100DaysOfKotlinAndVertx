/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package DaysOfKotlinAndVertx

import io.vertx.core.AbstractVerticle
import io.vertx.core.Vertx

class App:AbstractVerticle(){

    // Called when verticle is deployed
    override fun start() {
        println("hello")
        var server = vertx.createHttpServer()
        server.requestHandler({ req ->
            req.response().end("Hello World!")
        })
//        The actual bind is asynchronous so the server might not actually be listening until some time after the call
//        to listen has returned.
//
//        If you want to be notified when the server is actually listening you can provide a handler to the listen call.
//        For example:
        server.listen({res ->
            if(res.succeeded()){
                println("Server is now listening!")
            }else{
                println("failed to bind")
            }
        })
    }
    // Optional - called when verticle is undeployed
    override fun stop() {
        print("good bye")
    }
}

fun main(args: Array<String>) {
//    Using the below commented code HTTP Server is not associated with any verticle
//    var server = Vertx.vertx().createHttpServer()
//    server.requestHandler({req ->
//        req.response().end("Hello World!")
//    })
//    server.listen()
    Vertx.vertx().deployVerticle(App())
}
